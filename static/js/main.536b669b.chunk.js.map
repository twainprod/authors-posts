{"version":3,"sources":["api.js","Loader/Loader.jsx","Search/Search.jsx","Authors/AuthorsItem/AuthorsItem.jsx","Authors/Authors.jsx","Authors/AuthorsContainer.jsx","Posts/PostsItem/PostsItem.jsx","Posts/Posts.jsx","Posts/PostsContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","require","default","create","baseURL","myAPI","get","currentUser","Loader","className","Search","props","useState","value","setValue","type","placeholder","onChange","e","target","onClick","onSearch","AuthorsItem","name","email","id","getPostsById","Authors","data","map","a","AuthorsContainer","this","state","search","filter","item","toLowerCase","includes","filteredData","getFilteredData","isLoading","onSearchHandler","nullInput","React","Component","PostsItem","title","body","Posts","userId","PostsContainer","posts","onPostsSearchHandler","setState","fetchData","prevProps","filteredPosts","getFilteredPosts","nullCurrentUser","App","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.536b669b.chunk.js","sourcesContent":["const { default: Axios } = require(\"axios\");\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n})\r\n\r\nexport const myAPI = {\r\n    getAuthors() {\r\n        return instance.get('users');\r\n    },\r\n    getPosts(currentUser) {\r\n        return instance.get(`posts/?userId=${currentUser}`);\r\n    }\r\n}","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-dual-ring\"></div>\r\n}\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport './Search.css';\r\n\r\nconst Search = (props) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return <div className='inputBlock'>\r\n                <input type=\"text\" placeholder='Search' value={value}\r\n                    onChange={(e) => setValue(e.target.value)} />\r\n                <button className='btnSearch' onClick={() => props.onSearch(value)}><i className=\"fas fa-search\"></i></button>\r\n            </div>\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './../Authors.css';\r\n\r\nconst AuthorsItem = ({name, email, id, getPostsById}) => {\r\n    return <div className=\"item\" onClick={() => getPostsById(id) }>        \r\n                <div className=\"avatar\">{id}</div>\r\n                <div className=\"info\">\r\n                    <div className='name'>{name}</div>\r\n                    <div className='email'>{email}</div>\r\n                </div>\r\n                <div className='showPosts'><i className=\"fas fa-angle-double-right\"></i></div>\r\n    </div>\r\n}\r\n\r\nexport default AuthorsItem;","import React from 'react';\r\nimport AuthorsItem from './AuthorsItem/AuthorsItem';\r\n\r\nconst Authors = (props) => {\r\n    return props.data.map(a => <AuthorsItem key={a.id} name={a.name} email={a.email} id={a.id} getPostsById={props.getPostsById}/>);\r\n }\r\n\r\nexport default Authors;","import React from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport Search from '../Search/Search';\r\nimport Authors from './Authors';\r\n\r\nclass AuthorsContainer extends React.Component {\r\n    getFilteredData() {\r\n        const { data, search } = this.props.state;\r\n        if (!search) {\r\n          return data;\r\n        }\r\n        return data.filter(item => {\r\n          return item['name'].toLowerCase().includes(search.toLowerCase())\r\n            || item['email'].toLowerCase().includes(search.toLowerCase())\r\n        })\r\n    }\r\n    render() {\r\n        const filteredData = this.getFilteredData();\r\n        return ( <>\r\n            <p>Authors</p>            \r\n            {this.props.isLoading ? <Loader /> : <>\r\n             <Search onSearch={this.props.onSearchHandler} />\r\n              <Authors data={filteredData} getPostsById={this.props.getPostsById} /> </>}\r\n             {this.props.search ?\r\n            <button className='btnClear' onClick={() => { this.props.nullInput() }}>\r\n              <i className=\"fas fa-angle-double-left\"></i> Show all authors</button>\r\n               : null}\r\n</>\r\n        );\r\n            \r\n    }\r\n}\r\n\r\nexport default AuthorsContainer;","import React from 'react';\r\nimport '../Posts.css';\r\n\r\nconst PostsItem = (props) => {\r\n    return <div className='postItem'>\r\n        <div className='title'>{props.title}</div>\r\n        <div className='body'>{props.body}</div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default PostsItem;","import React from 'react';\r\nimport PostsItem from './PostsItem/PostsItem';\r\n\r\nconst Posts = (props) => {    \r\n        return props.data\r\n            .map(item => <PostsItem title={item.title} body={item.body} key={item.id + item.userId} />\r\n            );\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Search from '../Search/Search';\r\nimport Posts from './Posts';\r\nimport Loader from '../Loader/Loader';\r\nimport { myAPI } from '../api';\r\n\r\nclass PostsContainer extends React.Component {\r\n    \r\n    state = {\r\n        posts: [],\r\n        currentUser: this.props.currentUser,\r\n        search: '',\r\n        isLoading: true\r\n    }\r\n    \r\n    async fetchData(currentUser = this.state.currentUser) {\r\n        const { data } = await myAPI.getPosts(currentUser);        \r\n        this.setState({\r\n            posts: data,\r\n            currentUser,\r\n            isLoading: false\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData(this.state.currentUser);\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        \r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        const currentUser = this.props.currentUser;\r\n        if (currentUser !== prevProps.currentUser)\r\n            this.fetchData(currentUser);\r\n    }\r\n    onPostsSearchHandler = (search) => {\r\n        this.setState({\r\n            search\r\n        })\r\n    }\r\n    getFilteredPosts() {\r\n        const { posts, search } = this.state;\r\n        if (!search) {\r\n            return posts;\r\n        }\r\n        return posts.filter(item => {\r\n            return item['title'].toLowerCase().includes(search.toLowerCase())\r\n                || item['body'].toLowerCase().includes(search.toLowerCase());\r\n        })\r\n    }\r\n    nullInput() {\r\n        this.setState({\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    render() {          \r\n        const filteredPosts = this.getFilteredPosts();\r\n        return <>\r\n            <p>Posts of the ID: {this.state.currentUser}</p>  \r\n            {this.state.isLoading ? <Loader /> : <>\r\n                <Search onSearch={this.onPostsSearchHandler} />\r\n                <Posts data={filteredPosts} />\r\n                <div className='btnBack'><button onClick={() => {\r\n                    this.props.nullCurrentUser();\r\n                }}><i className=\"fas fa-angle-double-left\"></i> Back</button>\r\n                    {this.state.search ?\r\n                        <button onClick={() => this.nullInput()}>\r\n                            <i className=\"fas fa-angle-double-up\"></i> Show all posts</button> : null}</div></>}\r\n            \r\n            </>\r\n    }\r\n}\r\n\r\nexport default PostsContainer;","import React from 'react';\nimport { myAPI } from './api';\nimport AuthorsContainer from './Authors/AuthorsContainer';\nimport './index.css';\nimport PostsContainer from './Posts/PostsContainer';\n\nclass App extends React.PureComponent {\n  state = {\n    isLoading: true,\n    data: [],\n    currentUser: null,\n    search: ''\n  }\n  async componentDidMount() {\n    const { data } = await myAPI.getAuthors();    \n    this.setState({\n      isLoading: false,\n      data\n    })\n  }\n  \n  getPostsById = (currentUser) => {    \n    this.setState({\n      currentUser      \n    })    \n  }\n  onSearchHandler = search => {    \n    this.setState({\n        search\n      })        \n  }  \n\n  nullCurrentUser = () => {\n    this.setState({\n      currentUser: null\n    })    \n  }\n\n  nullInput = () => {\n    this.setState({\n      search: ''\n    })\n  }\n  render() {      \n    return (\n      <div className=\"App\">    \n        { this.state.currentUser ?\n          <PostsContainer currentUser={this.state.currentUser}\n            nullCurrentUser={this.nullCurrentUser} />\n          : <AuthorsContainer state={this.state}\n            data={this.state.data}\n            onSearchHandler={this.onSearchHandler}\n            getPostsById={this.getPostsById}\n            search={this.state.search}\n            isLoading={this.state.isLoading}\n            nullInput={this.nullInput}\n          />}          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}